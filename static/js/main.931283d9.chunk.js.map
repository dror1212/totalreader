{"version":3,"sources":["App.tsx","index.tsx"],"names":["values","App","props","state","link","stats","name","axios","get","this","then","res","responseText","data","counter","follower","find","temp","names","length","level","status","push","setState","followerName","power","stars","forEach","value","className","Header","size","Form","onSubmit","help","split","full","join","readPage","readTeam","Field","Button","color","type","Input","placeholder","onChange","e","target","map","index","Card","textAlign","position","offset","key","calculateStars","Number","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.931283d9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Header, Input, Form, Card } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./App.css\";\r\n\r\nconst stands = 16;\r\nconst values = [0, 18, 27, 35];\r\n\r\ninterface Iprops {}\r\n\r\ninterface Istate {\r\n  link: string;\r\n  stats: { name: string; level: string }[];\r\n  name: string[];\r\n}\r\n\r\nclass App extends Component<Iprops, Istate> {\r\n  constructor(props: Readonly<Iprops>) {\r\n    super(props);\r\n    this.state = {\r\n      link: \"\",\r\n      stats: [],\r\n      name: [],\r\n    };\r\n  }\r\n\r\n  readTeam() {\r\n    axios\r\n      .get(\"https://cors-anywhere.herokuapp.com/\" + this.state.link)\r\n      .then((res) => {\r\n        const responseText = res.data;\r\n        let counter = 0;\r\n        let follower = 0;\r\n        const find = \"data-age\";\r\n        const findAfter = `name=\"`;\r\n        const temp = [];\r\n        const names: string[] = [];\r\n        while (counter < responseText.length) {\r\n          if (responseText[counter] === find[follower]) {\r\n            follower++;\r\n          } else {\r\n            follower = 0;\r\n          }\r\n          if (follower + 1 === find.length) {\r\n            counter -= 10 + find.length;\r\n            while (responseText[counter] !== `\"`) {\r\n              counter -= 1;\r\n            }\r\n            counter += 1;\r\n            let level: string = \"\";\r\n            let name: string = \"\";\r\n            let status = true;\r\n            while (responseText[counter] !== `\"`) {\r\n              if (responseText[counter] === \":\") {\r\n                status = false;\r\n              } else if (responseText[counter] === \",\") {\r\n                status = true;\r\n                temp.push({ name, level });\r\n                level = \"\";\r\n                name = \"\";\r\n              } else if (status) {\r\n                name += responseText[counter];\r\n              } else {\r\n                level += responseText[counter];\r\n              }\r\n              counter++;\r\n            }\r\n            follower = 0;\r\n            name = \"\";\r\n            while (counter < responseText.length) {\r\n              if (responseText[counter] === findAfter[follower]) {\r\n                follower++;\r\n              } else {\r\n                follower = 0;\r\n              }\r\n              if (follower === findAfter.length) {\r\n                counter += 1;\r\n                while (responseText[counter] !== `\"`) {\r\n                  name += responseText[counter];\r\n                  counter++;\r\n                }\r\n                break;\r\n              }\r\n              counter++;\r\n            }\r\n            follower = 0;\r\n            name += \" \";\r\n            while (counter < responseText.length) {\r\n              if (responseText[counter] === findAfter[follower]) {\r\n                follower++;\r\n              } else {\r\n                follower = 0;\r\n              }\r\n              if (follower === findAfter.length) {\r\n                counter += 1;\r\n                while (responseText[counter] !== `\"`) {\r\n                  name += responseText[counter];\r\n                  counter++;\r\n                }\r\n                break;\r\n              }\r\n              counter++;\r\n            }\r\n            follower = 0;\r\n            names.push(name);\r\n          }\r\n          counter += 1;\r\n        }\r\n        this.setState({ link: \"\", stats: temp, name: names });\r\n      });\r\n  }\r\n\r\n  readPage() {\r\n    axios\r\n      .get(\"https://cors-anywhere.herokuapp.com/\" + this.state.link)\r\n      .then((res) => {\r\n        const responseText = res.data;\r\n        let counter = 0;\r\n        const find = \"data-positions=\";\r\n        let follower = 0;\r\n        const findName = \"<title>\";\r\n        let followerName = 0;\r\n        let name = \"\";\r\n        while (counter < responseText.length && follower + 1 !== find.length) {\r\n          if (responseText[counter] === find[follower]) {\r\n            follower++;\r\n          } else {\r\n            follower = 0;\r\n          }\r\n          if (!name && responseText[counter] === findName[followerName]) {\r\n            followerName++;\r\n          } else {\r\n            followerName = 0;\r\n          }\r\n          counter += 1;\r\n          if (followerName + 1 === findName.length) {\r\n            while (responseText[++counter] !== \"<\") {\r\n              name += responseText[counter];\r\n            }\r\n          }\r\n        }\r\n        counter += 2;\r\n        const temp = [];\r\n        if (counter < responseText.length - 1) {\r\n          let level: string = \"\";\r\n          let name: string = \"\";\r\n          let status = true;\r\n          while (responseText[counter] !== `\"`) {\r\n            if (responseText[counter] === \":\") {\r\n              status = false;\r\n            } else if (responseText[counter] === \",\") {\r\n              status = true;\r\n              temp.push({ name, level });\r\n              level = \"\";\r\n              name = \"\";\r\n            } else if (status) {\r\n              name += responseText[counter];\r\n            } else {\r\n              level += responseText[counter];\r\n            }\r\n            counter++;\r\n          }\r\n        }\r\n        this.setState({ stats: temp, link: \"\", name: [name] });\r\n      });\r\n  }\r\n\r\n  calculateStars(power: number) {\r\n    let stars = 0;\r\n    values.forEach((value) => {\r\n      if (power >= value) {\r\n        stars += 0.5;\r\n      }\r\n    });\r\n\r\n    return stars;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"my-total-reader\">\r\n        <Header className=\"my-header\" size=\"huge\">\r\n          Total Reader\r\n        </Header>\r\n        <Form\r\n          onSubmit={() => {\r\n            let temp = this.state.link.length;\r\n            if (temp > 0) {\r\n              const help = this.state.link.split(\"/\");\r\n              help[help.length - 1] = \"\";\r\n              const full = help.join(\"/\");\r\n              if (\r\n                full === \"https://www.total-football.org/player/\" ||\r\n                full === \"www.total-football.org/player/\"\r\n              ) {\r\n                this.readPage();\r\n              } else if (help[help.length - 2] === \"squad\") {\r\n                this.readTeam();\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          <Form.Field className=\"my-field\">\r\n            <Button color=\"twitter\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <Input\r\n              className=\"my-input\"\r\n              value={this.state.link}\r\n              placeholder=\"Link to the player...\"\r\n              onChange={(e) => {\r\n                this.setState({ link: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n        <div className=\"player-info\">\r\n          {this.state.name.map((name, index) => {\r\n            return (\r\n              <Card className=\"my-card\">\r\n                <div>\r\n                  <Header textAlign=\"center\" className=\"info-name\" size=\"small\">\r\n                    {name}\r\n                  </Header>\r\n                </div>\r\n                {this.state.stats.map((position, offset) => {\r\n                  if (\r\n                    (index + 1) * (stands - 1) > offset &&\r\n                    index * (stands - 1) <= offset\r\n                  ) {\r\n                    return (\r\n                      <Header\r\n                        key={position.name}\r\n                        className=\"info-header\"\r\n                        size=\"small\"\r\n                      >\r\n                        {position.name} : {position.level}, stars:{\" \"}\r\n                        {this.calculateStars(Number(position.level))}\r\n                      </Header>\r\n                    );\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })}\r\n              </Card>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}