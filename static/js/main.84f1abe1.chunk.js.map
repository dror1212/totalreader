{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","props","state","link","stats","name","axios","get","this","then","res","responseText","data","counter","find","follower","followerName","length","temp","level","status","push","setState","className","Header","size","Form","onSubmit","help","split","full","join","console","log","readPage","Field","Button","color","type","Input","value","placeholder","onChange","e","target","textAlign","map","position","key","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UA4IeA,G,gEA7Hb,WAAYC,GAA0B,IAAD,8BACnC,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,MAAO,GACPC,KAAM,IAL2B,E,uDASzB,IAAD,OACTC,IACGC,IAAI,uCAAyCC,KAAKN,MAAMC,MACxDM,MAAK,SAACC,GAQL,IAPA,IAAMC,EAAeD,EAAIE,KACrBC,EAAU,EACRC,EAAO,kBACTC,EAAW,EAEXC,EAAe,EACfX,EAAO,GACJQ,EAAUF,EAAaM,QAAUF,EAAW,IAAMD,EAAKG,QAY5D,GAXIN,EAAaE,KAAaC,EAAKC,GACjCA,IAEAA,EAAW,EAERV,GAAQM,EAAaE,KATX,UASiCG,GAG9CA,EAAe,EAFfA,IAIFH,GAAW,EACPG,EAAe,IAfJ,UAemBC,OAChC,KAAmC,MAA5BN,IAAeE,IACpBR,GAAQM,EAAaE,GAK3B,IAAMK,EAAO,GACb,IAFAL,GAAW,GAEGF,EAAaM,OAAS,EAIlC,IAHA,IAAIE,EAAgB,GAChBd,EAAe,GACfe,GAAS,EACN,MAAAT,EAAaE,IACY,MAA1BF,EAAaE,GACfO,GAAS,EAC0B,MAA1BT,EAAaE,IACtBO,GAAS,EACTF,EAAKG,KAAK,CAAEhB,OAAMc,UAClBA,EAAQ,GACRd,EAAO,IACEe,EACTf,GAAQM,EAAaE,GAErBM,GAASR,EAAaE,GAExBA,IAGJ,EAAKS,SAAS,CAAElB,MAAOc,EAAMf,KAAM,GAAIE,KAAMA,S,+BAIzC,IAAD,OACP,OACE,yBAAKkB,UAAU,kBACb,kBAACC,EAAA,EAAD,CAAQD,UAAU,YAAYE,KAAK,QAAnC,gBAGA,kBAACC,EAAA,EAAD,CACEC,SAAU,WAER,GADW,EAAKzB,MAAMC,KAAKc,OAChB,EAAG,CACZ,IAAMW,EAAO,EAAK1B,MAAMC,KAAK0B,MAAM,KACnCD,EAAKA,EAAKX,OAAS,GAAK,GACxB,IAAMa,EAAOF,EAAKG,KAAK,KACvBC,QAAQC,IAAIH,GAED,2CAATA,GACS,mCAATA,GAEA,EAAKI,cAKX,kBAACR,EAAA,EAAKS,MAAN,CAAYZ,UAAU,YACpB,kBAACa,EAAA,EAAD,CAAQC,MAAM,UAAUC,KAAK,UAA7B,UAGA,kBAACC,EAAA,EAAD,CACEhB,UAAU,WACViB,MAAOhC,KAAKN,MAAMC,KAClBsC,YAAY,wBACZC,SAAU,SAACC,GACT,EAAKrB,SAAS,CAAEnB,KAAMwC,EAAEC,OAAOJ,aAKvC,yBAAKjB,UAAU,cACb,kBAACC,EAAA,EAAD,CAAQqB,UAAU,SAAStB,UAAU,YAAYE,KAAK,SACnDjB,KAAKN,MAAMG,OAGhB,yBAAKkB,UAAU,eACZf,KAAKN,MAAME,MAAM0C,KAAI,SAACC,GACrB,OACE,kBAACvB,EAAA,EAAD,CACEwB,IAAKD,EAAS1C,KACdwC,UAAU,SACVtB,UAAU,cACVE,KAAK,SAEJsB,EAAS1C,KANZ,MAMqB0C,EAAS5B,gB,GApH1B8B,cCTlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.84f1abe1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Header, Input, Form } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./App.css\";\r\n\r\ninterface Iprops {}\r\n\r\ninterface Istate {\r\n  link: string;\r\n  stats: { name: string; level: string }[];\r\n  name: string;\r\n}\r\n\r\nclass App extends Component<Iprops, Istate> {\r\n  constructor(props: Readonly<Iprops>) {\r\n    super(props);\r\n    this.state = {\r\n      link: \"\",\r\n      stats: [],\r\n      name: \"\",\r\n    };\r\n  }\r\n\r\n  readPage() {\r\n    axios\r\n      .get(\"https://cors-anywhere.herokuapp.com/\" + this.state.link)\r\n      .then((res) => {\r\n        const responseText = res.data;\r\n        let counter = 0;\r\n        const find = \"data-positions=\";\r\n        let follower = 0;\r\n        const findName = \"<title>\";\r\n        let followerName = 0;\r\n        let name = \"\";\r\n        while (counter < responseText.length && follower + 1 !== find.length) {\r\n          if (responseText[counter] === find[follower]) {\r\n            follower++;\r\n          } else {\r\n            follower = 0;\r\n          }\r\n          if (!name && responseText[counter] === findName[followerName]) {\r\n            followerName++;\r\n          } else {\r\n            followerName = 0;\r\n          }\r\n          counter += 1;\r\n          if (followerName + 1 === findName.length) {\r\n            while (responseText[++counter] !== \"<\") {\r\n              name += responseText[counter];\r\n            }\r\n          }\r\n        }\r\n        counter += 2;\r\n        const temp = [];\r\n        if (counter < responseText.length - 1) {\r\n          let level: string = \"\";\r\n          let name: string = \"\";\r\n          let status = true;\r\n          while (responseText[counter] !== `\"`) {\r\n            if (responseText[counter] === \":\") {\r\n              status = false;\r\n            } else if (responseText[counter] === \",\") {\r\n              status = true;\r\n              temp.push({ name, level });\r\n              level = \"\";\r\n              name = \"\";\r\n            } else if (status) {\r\n              name += responseText[counter];\r\n            } else {\r\n              level += responseText[counter];\r\n            }\r\n            counter++;\r\n          }\r\n        }\r\n        this.setState({ stats: temp, link: \"\", name: name });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"my-tic-tac-toe\">\r\n        <Header className=\"my-header\" size=\"huge\">\r\n          Total Reader\r\n        </Header>\r\n        <Form\r\n          onSubmit={() => {\r\n            let temp = this.state.link.length;\r\n            if (temp > 0) {\r\n              const help = this.state.link.split(\"/\");\r\n              help[help.length - 1] = \"\";\r\n              const full = help.join(\"/\");\r\n              console.log(full);\r\n              if (\r\n                full === \"https://www.total-football.org/player/\" ||\r\n                full === \"www.total-football.org/player/\"\r\n              ) {\r\n                this.readPage();\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          <Form.Field className=\"my-field\">\r\n            <Button color=\"twitter\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <Input\r\n              className=\"my-input\"\r\n              value={this.state.link}\r\n              placeholder=\"Link to the player...\"\r\n              onChange={(e) => {\r\n                this.setState({ link: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n        <div className=\"bottom-div\">\r\n          <Header textAlign=\"center\" className=\"info-name\" size=\"small\">\r\n            {this.state.name}\r\n          </Header>\r\n        </div>\r\n        <div className=\"player-info\">\r\n          {this.state.stats.map((position) => {\r\n            return (\r\n              <Header\r\n                key={position.name}\r\n                textAlign=\"center\"\r\n                className=\"info-header\"\r\n                size=\"small\"\r\n              >\r\n                {position.name} : {position.level}\r\n              </Header>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}