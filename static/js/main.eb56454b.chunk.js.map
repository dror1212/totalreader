{"version":3,"sources":["enums.tsx","Consts.tsx","Models.tsx","Utils.tsx","App.tsx","index.tsx"],"names":["findData","mode","pages","values","mark","Position","position","level","this","calculateStars","power","stars","forEach","value","App","props","state","link","stats","chose","filter","i","readTeam","console","log","find","responseText","counter","endSign","follower","newInfo","end","length","temp","name","status","push","loopLink","str","axios","get","then","res","newDataFound","data","info","age","id","getPositionsInfo","findInHtml","dataId","playerName","setState","split","join","title","dataPosition","className","Header","size","Popup","hoverable","basic","trigger","Icon","index","slice","createInfoForPopup","Button","onClick","Form","onSubmit","help","player","readPage","squad","team","pageSquad","all","try","Field","color","type","Input","placeholder","onChange","e","target","map","key","Object","entries","playerInfo","Number","Card","href","textAlign","CardContent","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb56454b.chunk.js","sourcesContent":["export enum findData {\r\n  age = \"data-age\",\r\n  name = `name=\"`,\r\n  dataId = `data-id=\"`,\r\n  dataPosition = \"data-positions=\",\r\n  title = \"<title>\",\r\n}\r\n\r\nexport enum mode {\r\n  filter = \"Filter\",\r\n  mark = \"Mark\",\r\n}\r\n\r\nexport enum pages {\r\n  player = \"player\",\r\n  team = \"team\",\r\n  squad = \"squad\",\r\n  pageSquad = \"/squad/\",\r\n  all = \"All\",\r\n}\r\n","export const values = [\r\n  0,\r\n  9,\r\n  18,\r\n  27,\r\n  35,\r\n  \"??\",\r\n  \"??\",\r\n  \"??\",\r\n  \"??\",\r\n  \"??\",\r\n  \"??\",\r\n  \"??\",\r\n];\r\n\r\nexport const mark = [0, 0.5, 1.0, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5];\r\n","export class Player {\r\n  playerName: string = \"\";\r\n  info: Position[] = [];\r\n}\r\n\r\nexport class Position {\r\n  position: string;\r\n  level: string;\r\n\r\n  constructor(position: string, level: string) {\r\n    this.position = position;\r\n    this.level = level;\r\n  }\r\n}\r\n","import { values, mark } from \"./Consts\";\r\n\r\nexport function calculateStars(power: number) {\r\n  let stars = -0.5;\r\n  values.forEach((value) => {\r\n    if (value === \"??\") {\r\n    } else if (power >= value) {\r\n      stars += 0.5;\r\n    }\r\n  });\r\n\r\n  return stars;\r\n}\r\n\r\nexport function createInfoForPopup() {\r\n  let info = \"\";\r\n  mark.forEach((value, index) => {\r\n    info += `\\n ${values[index]}-${values[index + 1]} : ${value}  , `;\r\n  });\r\n\r\n  info = info.slice(0, info.length - 4);\r\n  return info;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Input,\r\n  Form,\r\n  Card,\r\n  CardContent,\r\n  Popup,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./App.css\";\r\nimport { mark } from \"./Consts\";\r\nimport { Player, Position } from \"./Models\";\r\nimport { findData, mode, pages } from \"./enums\";\r\nimport { calculateStars, createInfoForPopup } from \"./Utils\";\r\n\r\ninterface Iprops {}\r\n\r\ninterface Istate {\r\n  link: string;\r\n  stats: {\r\n    [playerId: string]: Player;\r\n  };\r\n  chose: number;\r\n  filter: boolean;\r\n}\r\n\r\nclass App extends Component<Iprops, Istate> {\r\n  constructor(props: Readonly<Iprops>) {\r\n    super(props);\r\n    this.state = {\r\n      link: \"\",\r\n      stats: {},\r\n      chose: -1,\r\n      filter: false,\r\n    };\r\n  }\r\n\r\n  async try() {\r\n    let i = 1;\r\n    while (i < 1945) {\r\n      try {\r\n        await this.readTeam(`https://www.total-football.org/team/${i}/squad/`);\r\n      } catch {\r\n        console.log(i);\r\n        break;\r\n      }\r\n      i += 1;\r\n    }\r\n  }\r\n\r\n  findInHtml(\r\n    find: string,\r\n    responseText: any,\r\n    counter: number,\r\n    endSign?: string\r\n  ) {\r\n    let follower = 0;\r\n    let newInfo = \"\";\r\n    const end = endSign ? endSign : `\"`;\r\n    while (counter < responseText.length) {\r\n      if (responseText[counter] === find[follower]) {\r\n        follower++;\r\n      } else {\r\n        follower = 0;\r\n      }\r\n      if (follower === find.length) {\r\n        counter += 1;\r\n        while (responseText[counter] !== end) {\r\n          newInfo += responseText[counter];\r\n          counter++;\r\n        }\r\n        break;\r\n      }\r\n      counter++;\r\n    }\r\n\r\n    return { newInfo, counter };\r\n  }\r\n\r\n  getPositionsInfo(responseText: any, counter: number, temp: Position[]) {\r\n    let level: string = \"\";\r\n    let name: string = \"\";\r\n    let status = true;\r\n    while (responseText[counter] !== `\"`) {\r\n      if (responseText[counter] === \":\") {\r\n        status = false;\r\n      } else if (responseText[counter] === \",\") {\r\n        status = true;\r\n        temp.push(new Position(name, level));\r\n        level = \"\";\r\n        name = \"\";\r\n      } else if (status) {\r\n        name += responseText[counter];\r\n      } else {\r\n        level += responseText[counter];\r\n      }\r\n      counter++;\r\n    }\r\n\r\n    return counter;\r\n  }\r\n\r\n  async readTeam(loopLink?: string) {\r\n    const str = loopLink ? loopLink : this.state.link;\r\n    await axios\r\n      .get(\"https://cors-anywhere.herokuapp.com/\" + str)\r\n      .then((res) => {\r\n        const responseText = res.data;\r\n        let counter = 0;\r\n        let follower = 0;\r\n        let temp: Position[] = [];\r\n        const info = this.state.stats;\r\n        let newDataFound;\r\n        while (counter < responseText.length) {\r\n          if (responseText[counter] === findData.age[follower]) {\r\n            follower++;\r\n          } else {\r\n            follower = 0;\r\n          }\r\n          if (follower + 1 === findData.age.length) {\r\n            counter -= 10 + findData.age.length;\r\n            while (responseText[counter] !== `\"`) {\r\n              counter -= 1;\r\n            }\r\n            counter += 1;\r\n            let name: string = \"\";\r\n            let id: string = \"\";\r\n\r\n            counter = this.getPositionsInfo(responseText, counter, temp);\r\n\r\n            newDataFound = this.findInHtml(\r\n              findData.name,\r\n              responseText,\r\n              counter\r\n            );\r\n            name = newDataFound.newInfo + \" \";\r\n            counter = newDataFound.counter;\r\n\r\n            newDataFound = this.findInHtml(\r\n              findData.name,\r\n              responseText,\r\n              counter\r\n            );\r\n            name = name + newDataFound.newInfo;\r\n            counter = newDataFound.counter;\r\n\r\n            newDataFound = this.findInHtml(\r\n              findData.dataId,\r\n              responseText,\r\n              counter\r\n            );\r\n            id = newDataFound.newInfo;\r\n            counter = newDataFound.counter;\r\n\r\n            follower = 0;\r\n            if (!info[id]) {\r\n              info[id] = { playerName: name, info: temp };\r\n            } else {\r\n              console.log(name + \" is already exist\");\r\n            }\r\n            temp = [];\r\n          }\r\n          counter += 1;\r\n        }\r\n        this.setState({ link: \"\", stats: info });\r\n      });\r\n  }\r\n\r\n  async readPage() {\r\n    const id = this.state.link.split(\"player/\")[1].split(\"/\"[0]).join(\"\");\r\n    const info = this.state.stats;\r\n    if (!info[id]) {\r\n      await axios\r\n        .get(\"https://cors-anywhere.herokuapp.com/\" + this.state.link)\r\n        .then((res) => {\r\n          const responseText = res.data;\r\n          let counter = 0;\r\n          let name = \"\";\r\n          let newDataFound;\r\n          const temp: Position[] = [];\r\n\r\n          newDataFound = this.findInHtml(\r\n            findData.title,\r\n            responseText,\r\n            counter,\r\n            \"<\"\r\n          );\r\n          name = newDataFound.newInfo;\r\n          counter = newDataFound.counter;\r\n\r\n          newDataFound = this.findInHtml(\r\n            findData.dataPosition,\r\n            responseText,\r\n            counter\r\n          );\r\n          counter = newDataFound.counter + 1;\r\n\r\n          counter = this.getPositionsInfo(responseText, counter, temp);\r\n          info[id] = { playerName: name, info: temp };\r\n        });\r\n    } else {\r\n      console.log(this.state.stats[id].playerName + \" is already exist\");\r\n    }\r\n    this.setState({ stats: info, link: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"my-total-reader\">\r\n        <Header className=\"my-header\" size=\"huge\">\r\n          Total Reader\r\n        </Header>\r\n        <Popup\r\n          hoverable\r\n          basic\r\n          trigger={<Icon className=\"my-popup\" name=\"info\"></Icon>}\r\n        >\r\n          The numbers you will see after the players position are the value of\r\n          this player in this position, each value represent how many stars the\r\n          player deserve.\r\n          <br></br>\r\n          {createInfoForPopup()}\r\n        </Popup>\r\n        <Button\r\n          onClick={() => {\r\n            this.setState({ stats: {}, chose: -1 });\r\n          }}\r\n        >\r\n          Delete All\r\n        </Button>\r\n        <Form\r\n          onSubmit={() => {\r\n            let temp = this.state.link.length;\r\n            if (temp > 0) {\r\n              const help = this.state.link.split(\"/\");\r\n              if (\r\n                help[help.length - 2] === pages.player ||\r\n                help[help.length - 3] === pages.player\r\n              ) {\r\n                this.readPage();\r\n              } else if (\r\n                help[help.length - 2] === pages.squad ||\r\n                help[help.length - 1] === pages.squad\r\n              ) {\r\n                this.readTeam();\r\n              } else if (\r\n                help[help.length - 2] === pages.team ||\r\n                help[help.length - 3] === pages.team\r\n              ) {\r\n                this.readTeam(this.state.link + pages.pageSquad);\r\n              } else if (this.state.link === pages.all) {\r\n                this.try();\r\n              }\r\n              console.log(help);\r\n            }\r\n          }}\r\n        >\r\n          <Form.Field className=\"my-field\">\r\n            <Button color=\"twitter\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <Input\r\n              className=\"my-input\"\r\n              value={this.state.link}\r\n              placeholder=\"Link to a player/team...\"\r\n              onChange={(e) => {\r\n                this.setState({ link: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n        <Button\r\n          onClick={() => {\r\n            this.setState({ filter: !this.state.filter });\r\n          }}\r\n        >\r\n          {this.state.filter ? mode.filter : mode.mark}\r\n        </Button>\r\n        {mark.map((value) => {\r\n          return (\r\n            <Button\r\n              key={value}\r\n              className=\"my-button\"\r\n              color={this.state.chose === value ? \"yellow\" : \"red\"}\r\n              onClick={() => {\r\n                this.setState({\r\n                  chose: this.state.chose === value ? -1 : value,\r\n                });\r\n              }}\r\n            >\r\n              {value}\r\n            </Button>\r\n          );\r\n        })}\r\n        <div className=\"player-info\">\r\n          {Object.entries(this.state.stats).map((playerInfo) => {\r\n            return !this.state.filter ||\r\n              calculateStars(Number(playerInfo[1].info[0].level)) >=\r\n                this.state.chose ? (\r\n              <Card className=\"my-card\">\r\n                <a\r\n                  href={`https://www.total-football.org/player/${playerInfo[0]}/`}\r\n                >\r\n                  <Header textAlign=\"center\" className=\"info-name\" size=\"small\">\r\n                    {playerInfo[1].playerName}\r\n                  </Header>\r\n                </a>\r\n                {playerInfo[1].info.map((info) => {\r\n                  return !this.state.filter ||\r\n                    calculateStars(Number(info.level)) >= this.state.chose ? (\r\n                    <CardContent\r\n                      key={info.position + playerInfo[0]}\r\n                      className={\r\n                        !this.state.filter &&\r\n                        this.state.chose === calculateStars(Number(info.level))\r\n                          ? \"info-header-mark\"\r\n                          : \"info-header\"\r\n                      }\r\n                    >\r\n                      {info.position} : {info.level}, stars:{\" \"}\r\n                      {calculateStars(Number(info.level))}\r\n                    </CardContent>\r\n                  ) : null;\r\n                })}\r\n              </Card>\r\n            ) : null;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}