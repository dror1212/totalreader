{"version":3,"sources":["enums.tsx","Consts.tsx","Models.tsx","Utils.tsx","App.tsx","index.tsx"],"names":["findData","mode","pages","values","mark","stands","Position","position","level","this","calculateStars","power","stars","forEach","value","App","props","state","link","stats","chose","filter","standsFilter","counter","nameFilter","find","responseText","endSign","follower","newInfo","end","length","temp","name","status","push","loopLink","str","axios","get","then","res","newDataFound","data","info","age","id","getPositionsInfo","findInHtml","dataId","console","log","playerName","setState","split","join","title","dataPosition","className","Header","size","Popup","hoverable","basic","trigger","Icon","index","slice","createInfoForPopup","Button","onClick","Form","onSubmit","help","player","readPage","squad","readTeam","team","pageSquad","Field","color","type","Input","placeholder","onChange","e","target","map","key","stand","Object","entries","playerInfo","toLowerCase","Number","Card","href","textAlign","CardContent","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2aac6bb.chunk.js","sourcesContent":["export enum findData {\r\n  age = \"data-age\",\r\n  name = `name=\"`,\r\n  dataId = `data-id=\"`,\r\n  dataPosition = \"data-positions=\",\r\n  title = \"<title>\",\r\n}\r\n\r\nexport enum mode {\r\n  filter = \"Filter\",\r\n  mark = \"Mark\",\r\n}\r\n\r\nexport enum pages {\r\n  player = \"player\",\r\n  team = \"team\",\r\n  squad = \"squad\",\r\n  pageSquad = \"/squad/\",\r\n  all = \"All\",\r\n}\r\n","export const values = [\r\n  0,\r\n  9,\r\n  18,\r\n  27,\r\n  35,\r\n  44,\r\n  \"??\",\r\n  \"??\",\r\n  \"??\",\r\n  \"??\",\r\n  \"??\",\r\n  \"??\",\r\n];\r\n\r\nexport const mark = [0, 0.5, 1.0, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5];\r\n\r\nexport const stands = [\r\n  \"FW\",\r\n  \"RF\",\r\n  \"LF\",\r\n  \"LAM\",\r\n  \"RAM\",\r\n  \"AM\",\r\n  \"LM\",\r\n  \"RM\",\r\n  \"CM\",\r\n  \"LWB\",\r\n  \"RWB\",\r\n  \"DM\",\r\n  \"LD\",\r\n  \"RD\",\r\n  \"CD\",\r\n  \"GK\",\r\n];\r\n","export class Player {\r\n  playerName: string = \"\";\r\n  info: Position[] = [];\r\n}\r\n\r\nexport class Position {\r\n  position: string;\r\n  level: string;\r\n\r\n  constructor(position: string, level: string) {\r\n    this.position = position;\r\n    this.level = level;\r\n  }\r\n}\r\n","import { values, mark } from \"./Consts\";\r\n\r\nexport function calculateStars(power: number) {\r\n  let stars = -0.5;\r\n  values.forEach((value) => {\r\n    if (value === \"??\") {\r\n    } else if (power >= value) {\r\n      stars += 0.5;\r\n    }\r\n  });\r\n\r\n  return stars;\r\n}\r\n\r\nexport function createInfoForPopup() {\r\n  let info = \"\";\r\n  mark.forEach((value, index) => {\r\n    info += `\\n ${values[index]}-${values[index + 1]} : ${value}  , `;\r\n  });\r\n\r\n  info = info.slice(0, info.length - 4);\r\n  return info;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Input,\r\n  Form,\r\n  Card,\r\n  CardContent,\r\n  Popup,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./App.css\";\r\nimport { mark, stands } from \"./Consts\";\r\nimport { Player, Position } from \"./Models\";\r\nimport { findData, mode, pages } from \"./enums\";\r\nimport { calculateStars, createInfoForPopup } from \"./Utils\";\r\n\r\ninterface Iprops {}\r\n\r\ninterface Istate {\r\n  link: string;\r\n  stats: {\r\n    [playerId: string]: Player;\r\n  };\r\n  chose: number;\r\n  filter: boolean;\r\n  standsFilter: { [stand: string]: any };\r\n  nameFilter: String;\r\n}\r\n\r\nclass App extends Component<Iprops, Istate> {\r\n  constructor(props: Readonly<Iprops>) {\r\n    super(props);\r\n    this.state = {\r\n      link: \"\",\r\n      stats: {},\r\n      chose: -1,\r\n      filter: false,\r\n      standsFilter: { counter: 0 },\r\n      nameFilter: \"\"\r\n    };\r\n  }\r\n\r\n  findInHtml(\r\n    find: string,\r\n    responseText: any,\r\n    counter: number,\r\n    endSign?: string\r\n  ) {\r\n    let follower = 0;\r\n    let newInfo = \"\";\r\n    const end = endSign ? endSign : `\"`;\r\n    while (counter < responseText.length) {\r\n      if (responseText[counter] === find[follower]) {\r\n        follower++;\r\n      } else {\r\n        follower = 0;\r\n      }\r\n      if (follower === find.length) {\r\n        counter += 1;\r\n        while (responseText[counter] !== end) {\r\n          newInfo += responseText[counter];\r\n          counter++;\r\n        }\r\n        break;\r\n      }\r\n      counter++;\r\n    }\r\n\r\n    return { newInfo, counter };\r\n  }\r\n\r\n  getPositionsInfo(responseText: any, counter: number, temp: Position[]) {\r\n    let level: string = \"\";\r\n    let name: string = \"\";\r\n    let status = true;\r\n    while (responseText[counter] !== `\"`) {\r\n      if (responseText[counter] === \":\") {\r\n        status = false;\r\n      } else if (responseText[counter] === \",\") {\r\n        status = true;\r\n        temp.push(new Position(name, level));\r\n        level = \"\";\r\n        name = \"\";\r\n      } else if (status) {\r\n        name += responseText[counter];\r\n      } else {\r\n        level += responseText[counter];\r\n      }\r\n      counter++;\r\n    }\r\n\r\n    return counter;\r\n  }\r\n\r\n  async readTeam(loopLink?: string) {\r\n    const str = loopLink ? loopLink : this.state.link;\r\n    await axios\r\n      .get(\"https://cors-anywhere.herokuapp.com/\" + str)\r\n      .then((res) => {\r\n        const responseText = res.data;\r\n        let counter = 0;\r\n        let follower = 0;\r\n        let temp: Position[] = [];\r\n        const info = this.state.stats;\r\n        let newDataFound;\r\n        while (counter < responseText.length) {\r\n          if (responseText[counter] === findData.age[follower]) {\r\n            follower++;\r\n          } else {\r\n            follower = 0;\r\n          }\r\n          if (follower + 1 === findData.age.length) {\r\n            counter -= 10 + findData.age.length;\r\n            while (responseText[counter] !== `\"`) {\r\n              counter -= 1;\r\n            }\r\n            counter += 1;\r\n            let name: string = \"\";\r\n            let id: string = \"\";\r\n\r\n            counter = this.getPositionsInfo(responseText, counter, temp);\r\n\r\n            newDataFound = this.findInHtml(\r\n              findData.name,\r\n              responseText,\r\n              counter\r\n            );\r\n            name = newDataFound.newInfo + \" \";\r\n            counter = newDataFound.counter;\r\n\r\n            newDataFound = this.findInHtml(\r\n              findData.name,\r\n              responseText,\r\n              counter\r\n            );\r\n            name = name + newDataFound.newInfo;\r\n            counter = newDataFound.counter;\r\n\r\n            newDataFound = this.findInHtml(\r\n              findData.dataId,\r\n              responseText,\r\n              counter\r\n            );\r\n            id = newDataFound.newInfo;\r\n            counter = newDataFound.counter;\r\n\r\n            follower = 0;\r\n            if (!info[id]) {\r\n              info[id] = { playerName: name, info: temp };\r\n            } else {\r\n              console.log(name + \" is already exist\");\r\n            }\r\n            temp = [];\r\n          }\r\n          counter += 1;\r\n        }\r\n        this.setState({ link: \"\", stats: info });\r\n      });\r\n  }\r\n\r\n  async readPage() {\r\n    const id = this.state.link.split(\"player/\")[1].split(\"/\"[0]).join(\"\");\r\n    const info = this.state.stats;\r\n    if (!info[id]) {\r\n      await axios\r\n        .get(\"https://cors-anywhere.herokuapp.com/\" + this.state.link)\r\n        .then((res) => {\r\n          const responseText = res.data;\r\n          let counter = 0;\r\n          let name = \"\";\r\n          let newDataFound;\r\n          const temp: Position[] = [];\r\n\r\n          newDataFound = this.findInHtml(\r\n            findData.title,\r\n            responseText,\r\n            counter,\r\n            \"<\"\r\n          );\r\n          name = newDataFound.newInfo;\r\n          counter = newDataFound.counter;\r\n\r\n          newDataFound = this.findInHtml(\r\n            findData.dataPosition,\r\n            responseText,\r\n            counter\r\n          );\r\n          counter = newDataFound.counter + 1;\r\n\r\n          counter = this.getPositionsInfo(responseText, counter, temp);\r\n          info[id] = { playerName: name, info: temp };\r\n        });\r\n    } else {\r\n      console.log(this.state.stats[id].playerName + \" is already exist\");\r\n    }\r\n    this.setState({ stats: info, link: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"my-total-reader\">\r\n        <Header className=\"my-header\" size=\"huge\">\r\n          Total Reader\r\n        </Header>\r\n        <Popup\r\n          hoverable\r\n          basic\r\n          trigger={<Icon className=\"my-popup\" name=\"info\"></Icon>}\r\n        >\r\n          The numbers you will see after the players position are the value of\r\n          this player in this position, each value represent how many stars the\r\n          player deserve.\r\n          <br></br>\r\n          {createInfoForPopup()}\r\n        </Popup>\r\n        <Button\r\n          onClick={() => {\r\n            this.setState({\r\n              stats: {},\r\n              chose: -1,\r\n              standsFilter: { counter: 0 },\r\n              link : \"\",\r\n              nameFilter: \"\",\r\n              filter: false,\r\n            });\r\n          }}\r\n        >\r\n          Delete All\r\n        </Button>\r\n        <Form\r\n          onSubmit={() => {\r\n            let temp = this.state.link.length;\r\n            if (temp > 0) {\r\n              const help = this.state.link.split(\"/\");\r\n              if (\r\n                help[help.length - 2] === pages.player ||\r\n                help[help.length - 3] === pages.player\r\n              ) {\r\n                this.readPage();\r\n              } else if (\r\n                help[help.length - 2] === pages.squad ||\r\n                help[help.length - 1] === pages.squad\r\n              ) {\r\n                this.readTeam();\r\n              } else if (\r\n                help[help.length - 2] === pages.team ||\r\n                help[help.length - 3] === pages.team\r\n              ) {\r\n                this.readTeam(this.state.link + pages.pageSquad);\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          <Form.Field className=\"my-field flex\">\r\n            <Button color=\"twitter\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <Input\r\n              className=\"my-input\"\r\n              value={this.state.link}\r\n              placeholder=\"Link to a player/team...\"\r\n              onChange={(e) => {\r\n                this.setState({ link: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n          <Form.Field className=\"flex small-margin\">\r\n            <Input\r\n              className=\"my-input\"\r\n              value={this.state.nameFilter}\r\n              placeholder=\"Players name filter\"\r\n              onChange={(e) => {\r\n                this.setState({ nameFilter: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Field>\r\n        <Button\r\n          onClick={() => {\r\n            this.setState({ filter: !this.state.filter });\r\n          }}\r\n        >\r\n          {this.state.filter ? mode.filter : mode.mark}\r\n        </Button>\r\n        {mark.map((value) => {\r\n          return (\r\n            <Button\r\n              key={value}\r\n              className=\"my-button\"\r\n              color={this.state.chose === value ? \"yellow\" : \"red\"}\r\n              onClick={() => {\r\n                this.setState({\r\n                  chose: this.state.chose === value ? -1 : value,\r\n                });\r\n              }}\r\n            >\r\n              {value}\r\n            </Button>\r\n          );\r\n        })}\r\n        <div>\r\n          {stands.map((stand) => {\r\n            return (\r\n              <Button\r\n                key={stand}\r\n                className=\"my-button\"\r\n                color={this.state.standsFilter[stand] ? \"green\" : \"purple\"}\r\n                onClick={() => {\r\n                  const temp = this.state.standsFilter;\r\n                  if (temp[stand]) {\r\n                    temp[\"counter\"]--;\r\n                  } else {\r\n                    temp[\"counter\"]++;\r\n                  }\r\n                  temp[stand] = !temp[stand];\r\n                  this.setState({\r\n                    standsFilter: temp,\r\n                  });\r\n                }}\r\n              >\r\n                {stand}\r\n              </Button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"player-info\">\r\n          {Object.entries(this.state.stats).map((playerInfo) => {\r\n            const player = playerInfo[1];\r\n            return (player.playerName.slice(0, this.state.nameFilter.length).toLowerCase() ===\r\n            this.state.nameFilter.toLowerCase() &&\r\n          (!this.state.filter ||\r\n            calculateStars(Number(player.info[0].level)) >= this.state.chose) &&\r\n          (!this.state.standsFilter[\"counter\"] ||\r\n            this.state.standsFilter[player.info[0].position])) ? (\r\n              <Card className=\"my-card\">\r\n                <a\r\n                  href={`https://www.total-football.org/player/${playerInfo[0]}/`}\r\n                >\r\n                  <Header textAlign=\"center\" className=\"info-name\" size=\"small\">\r\n                    {playerInfo[1].playerName}\r\n                  </Header>\r\n                </a>\r\n                {playerInfo[1].info.map((info) => {\r\n                  return !this.state.filter ||\r\n                    calculateStars(Number(info.level)) >= this.state.chose ? (\r\n                    <CardContent\r\n                      key={info.position + playerInfo[0]}\r\n                      className={\r\n                        !this.state.filter &&\r\n                        this.state.chose === calculateStars(Number(info.level))\r\n                          ? \"info-header-mark\"\r\n                          : \"info-header\"\r\n                      }\r\n                    >\r\n                      {info.position} : {info.level}, stars:{\" \"}\r\n                      {calculateStars(Number(info.level))}\r\n                    </CardContent>\r\n                  ) : null;\r\n                })}\r\n              </Card>\r\n            ) : null;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}