{"version":3,"sources":["App.tsx","index.tsx"],"names":["values","mark","App","props","state","link","stats","chose","filter","i","this","readTeam","console","log","loopLink","str","axios","get","then","res","responseText","data","counter","follower","find","temp","info","length","level","name","status","push","player","setState","followerName","power","stars","forEach","value","className","Header","size","Button","onClick","Form","onSubmit","help","split","full","join","readPage","try","Field","color","type","Input","placeholder","onChange","e","target","map","playerInformation","calculateStars","Number","Card","textAlign","CardContent","key","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4e06928.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Input,\r\n  Form,\r\n  Card,\r\n  CardContent,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./App.css\";\r\n\r\nconst values = [9, 18, 27, 35];\r\nconst mark = [0, 0.5, 1.0, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5];\r\n\r\ninterface Iprops {}\r\n\r\ninterface Istate {\r\n  link: string;\r\n  stats: { player: string; info: { name: string; level: string }[] }[];\r\n  chose: number;\r\n  filter: boolean;\r\n}\r\n\r\nclass App extends Component<Iprops, Istate> {\r\n  constructor(props: Readonly<Iprops>) {\r\n    super(props);\r\n    this.state = {\r\n      link: \"\",\r\n      stats: [],\r\n      chose: 8,\r\n      filter: false,\r\n    };\r\n  }\r\n\r\n  async try() {\r\n    let i = 1;\r\n    while (i < 1945) {\r\n      try {\r\n        await this.readTeam(`https://www.total-football.org/team/${i}/squad/`);\r\n      } catch {\r\n        console.log(i);\r\n        break;\r\n      }\r\n      i += 1;\r\n    }\r\n  }\r\n\r\n  async readTeam(loopLink?: string) {\r\n    const str = loopLink ? loopLink : this.state.link;\r\n    await axios\r\n      .get(\"https://cors-anywhere.herokuapp.com/\" + str)\r\n      .then((res) => {\r\n        const responseText = res.data;\r\n        let counter = 0;\r\n        let follower = 0;\r\n        const find = \"data-age\";\r\n        const findAfter = `name=\"`;\r\n        let temp: { name: string; level: string }[] = [];\r\n        const info = this.state.stats;\r\n        while (counter < responseText.length) {\r\n          if (responseText[counter] === find[follower]) {\r\n            follower++;\r\n          } else {\r\n            follower = 0;\r\n          }\r\n          if (follower + 1 === find.length) {\r\n            counter -= 10 + find.length;\r\n            while (responseText[counter] !== `\"`) {\r\n              counter -= 1;\r\n            }\r\n            counter += 1;\r\n            let level: string = \"\";\r\n            let name: string = \"\";\r\n            let status = true;\r\n            while (responseText[counter] !== `\"`) {\r\n              if (responseText[counter] === \":\") {\r\n                status = false;\r\n              } else if (responseText[counter] === \",\") {\r\n                status = true;\r\n                temp.push({ name, level });\r\n                level = \"\";\r\n                name = \"\";\r\n              } else if (status) {\r\n                name += responseText[counter];\r\n              } else {\r\n                level += responseText[counter];\r\n              }\r\n              counter++;\r\n            }\r\n            follower = 0;\r\n            name = \"\";\r\n            while (counter < responseText.length) {\r\n              if (responseText[counter] === findAfter[follower]) {\r\n                follower++;\r\n              } else {\r\n                follower = 0;\r\n              }\r\n              if (follower === findAfter.length) {\r\n                counter += 1;\r\n                while (responseText[counter] !== `\"`) {\r\n                  name += responseText[counter];\r\n                  counter++;\r\n                }\r\n                break;\r\n              }\r\n              counter++;\r\n            }\r\n            follower = 0;\r\n            name += \" \";\r\n            while (counter < responseText.length) {\r\n              if (responseText[counter] === findAfter[follower]) {\r\n                follower++;\r\n              } else {\r\n                follower = 0;\r\n              }\r\n              if (follower === findAfter.length) {\r\n                counter += 1;\r\n                while (responseText[counter] !== `\"`) {\r\n                  name += responseText[counter];\r\n                  counter++;\r\n                }\r\n                break;\r\n              }\r\n              counter++;\r\n            }\r\n            follower = 0;\r\n            info.push({ player: name, info: temp });\r\n            name = \"\";\r\n            temp = [];\r\n          }\r\n          counter += 1;\r\n        }\r\n        this.setState({ link: \"\", stats: info });\r\n      });\r\n  }\r\n\r\n  readPage() {\r\n    axios\r\n      .get(\"https://cors-anywhere.herokuapp.com/\" + this.state.link)\r\n      .then((res) => {\r\n        const responseText = res.data;\r\n        let counter = 0;\r\n        const find = \"data-positions=\";\r\n        let follower = 0;\r\n        const findName = \"<title>\";\r\n        let followerName = 0;\r\n        let name = \"\";\r\n        while (counter < responseText.length && follower + 1 !== find.length) {\r\n          if (responseText[counter] === find[follower]) {\r\n            follower++;\r\n          } else {\r\n            follower = 0;\r\n          }\r\n          if (!name && responseText[counter] === findName[followerName]) {\r\n            followerName++;\r\n          } else {\r\n            followerName = 0;\r\n          }\r\n          counter += 1;\r\n          if (followerName + 1 === findName.length) {\r\n            while (responseText[++counter] !== \"<\") {\r\n              name += responseText[counter];\r\n            }\r\n          }\r\n        }\r\n        counter += 2;\r\n        const temp: { name: string; level: string }[] = [];\r\n        if (counter < responseText.length - 1) {\r\n          let level: string = \"\";\r\n          let name: string = \"\";\r\n          let status = true;\r\n          while (responseText[counter] !== `\"`) {\r\n            if (responseText[counter] === \":\") {\r\n              status = false;\r\n            } else if (responseText[counter] === \",\") {\r\n              status = true;\r\n              temp.push({ name, level });\r\n              level = \"\";\r\n              name = \"\";\r\n            } else if (status) {\r\n              name += responseText[counter];\r\n            } else {\r\n              level += responseText[counter];\r\n            }\r\n            counter++;\r\n          }\r\n        }\r\n        const info = this.state.stats;\r\n        info.push({ player: name, info: temp });\r\n\r\n        this.setState({ stats: info, link: \"\" });\r\n      });\r\n  }\r\n\r\n  calculateStars(power: number) {\r\n    let stars = 0;\r\n    values.forEach((value) => {\r\n      if (power >= value) {\r\n        stars += 0.5;\r\n      }\r\n    });\r\n\r\n    return stars;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"my-total-reader\">\r\n        <Header className=\"my-header\" size=\"huge\">\r\n          Total Reader\r\n        </Header>\r\n        <Button\r\n          onClick={() => {\r\n            this.setState({ stats: [] });\r\n          }}\r\n        >\r\n          Delete All\r\n        </Button>\r\n        <Form\r\n          onSubmit={() => {\r\n            let temp = this.state.link.length;\r\n            if (temp > 0) {\r\n              const help = this.state.link.split(\"/\");\r\n              help[help.length - 1] = \"\";\r\n              const full = help.join(\"/\");\r\n              if (\r\n                full === \"https://www.total-football.org/player/\" ||\r\n                full === \"www.total-football.org/player/\"\r\n              ) {\r\n                this.readPage();\r\n              } else if (help[help.length - 2] === \"squad\") {\r\n                this.readTeam();\r\n              } else if (\r\n                help[help.length - 2] === \"team\" ||\r\n                help[help.length - 3] === \"team\"\r\n              ) {\r\n                this.readTeam(this.state.link + \"/squad/\");\r\n              } else if (this.state.link === \"All\") {\r\n                this.try();\r\n              }\r\n              console.log(help);\r\n            }\r\n          }}\r\n        >\r\n          <Form.Field className=\"my-field\">\r\n            <Button color=\"twitter\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <Input\r\n              className=\"my-input\"\r\n              value={this.state.link}\r\n              placeholder=\"Link to a player/team...\"\r\n              onChange={(e) => {\r\n                this.setState({ link: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n        <Button\r\n          onClick={() => {\r\n            this.setState({ filter: !this.state.filter });\r\n          }}\r\n        >\r\n          {this.state.filter ? \"Filter\" : \"Mark\"}\r\n        </Button>\r\n        {mark.map((value) => {\r\n          return (\r\n            <Button\r\n              className=\"my-button\"\r\n              color={this.state.chose === value ? \"yellow\" : \"red\"}\r\n              onClick={() => {\r\n                this.setState({ chose: value });\r\n              }}\r\n            >\r\n              {value}\r\n            </Button>\r\n          );\r\n        })}\r\n        <div className=\"player-info\">\r\n          {this.state.stats.map((playerInformation) => {\r\n            return !this.state.filter ||\r\n              this.calculateStars(Number(playerInformation.info[0].level)) >=\r\n                this.state.chose ? (\r\n              <Card className=\"my-card\">\r\n                <div>\r\n                  <Header textAlign=\"center\" className=\"info-name\" size=\"small\">\r\n                    {playerInformation.player}\r\n                  </Header>\r\n                </div>\r\n                {playerInformation.info.map((info) => {\r\n                  return (\r\n                    <CardContent\r\n                      key={info.name}\r\n                      className={\r\n                        !this.state.filter &&\r\n                        this.state.chose ===\r\n                          this.calculateStars(Number(info.level))\r\n                          ? \"info-header-mark\"\r\n                          : \"info-header\"\r\n                      }\r\n                    >\r\n                      {info.name} : {info.level}, stars:{\" \"}\r\n                      {this.calculateStars(Number(info.level))}\r\n                    </CardContent>\r\n                  );\r\n                })}\r\n              </Card>\r\n            ) : null;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}